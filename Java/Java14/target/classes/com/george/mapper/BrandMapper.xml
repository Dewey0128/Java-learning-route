<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    数据库表的字段名称  和  实体类的属性名称  不一样，则不能自动封装
        *  起别名
        *  sql片段
        *  resultMap
            1.定义<resultMap>标签
                id : 唯一标识
                type : 映射的类型，支持别名
            2.在<select>标签中，使用resultMap属性替换 resultType属性
-->

<mapper namespace="com.george.mapper.BrandMapper">

    <resultMap id="brandResult" type="brand">
        <result column="brand_name" property="brandName" />
        <!--
            column : 数据库字段名
            property : 实体类变量名
        -->
        <result column="company_name" property="companyName" />
    </resultMap>

    <select id="selectAll" resultMap="brandResult">
       select * from tb_brand;
    </select>
    <!--
        1.参数占位符：
            #{}：执行SQL时，会被#{}占位符替代为？，将来自动设置参数值
            ${}：拼SQL。会存在SQL注入问题
            使用时机：
                参数传递，都使用 #{}
                如果要对表名，列名进行动态设置，只能使用${}进行SQL拼接
        2.parameterType:
            用于设置参数类型，改参数可以省略这个字段
        3.SQL语句中特殊字符处理：
            使用转义字符
            <![CDATA[内容]]>
    -->
    <select id="searchByIdBrand" resultType="com.george.pojo.Brand">
        select * from tb_brand where id = #{id};
    </select>


</mapper>